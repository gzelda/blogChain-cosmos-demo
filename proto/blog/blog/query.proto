syntax = "proto3";
package blog.blog;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "blog/blog/params.proto";
import "blog/blog/post.proto";
import "blog/blog/account.proto";
import "blog/blog/follow.proto";

// this line is used by starport scaffolding # 1

option go_package = "blog/x/blog/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/blog/blog/params";
  }
  // Queries a list of Posts items.
	rpc Posts(QueryPostsRequest) returns (QueryPostsResponse) {
		option (google.api.http).get = "/blog/blog/posts";
	}

// Queries a list of AccountList items.
	rpc AccountList(QueryAccountListRequest) returns (QueryAccountListResponse) {
		option (google.api.http).get = "/blog/blog/account_list";
	}

// Queries a list of FollowList items.
	rpc FollowList(QueryFollowListRequest) returns (QueryFollowListResponse) {
		option (google.api.http).get = "/blog/blog/follow_list";
	}

// Queries a list of Comments items.
	rpc Comments(QueryCommentsRequest) returns (QueryCommentsResponse) {
		option (google.api.http).get = "/blog/blog/comments/{id}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryPostsRequest {
  // Adding pagination to request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryPostsResponse {
  // Returning a list of posts
  repeated Post Post = 1;

  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryAccountListRequest {
}

message QueryAccountListResponse {
  AccountsList creatorList = 1;
}

message QueryFollowListRequest {
	string address = 1;
}

message QueryFollowListResponse {
	FollowAddressList followList = 1;
}

message QueryCommentsRequest {
  uint64 id = 1;
}

message QueryCommentsResponse {
  string title = 1;
  string body = 2;
}

// this line is used by starport scaffolding # 3
